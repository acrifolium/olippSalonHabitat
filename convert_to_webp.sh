#!/bin/bash

# Script pour convertir des images JPEG en WebP et les renommer s√©quentiellement

# Configuration
INPUT_DIR="img/salon/new"      # R√©pertoire source contenant les images JPEG
OUTPUT_DIR="img/salon/webp"    # R√©pertoire de destination pour les fichiers WebP
QUALITY=85                     # Qualit√© de la compression WebP (0-100)

# V√©rification d'ImageMagick
if ! command -v convert &> /dev/null; then
    echo "ImageMagick n'est pas install√©. Installation en cours..."
    sudo apt update && sudo apt install imagemagick -y || { echo "L'installation a √©chou√©"; exit 1; }
fi

# V√©rifier que le r√©pertoire source existe
if [ ! -d "$INPUT_DIR" ]; then
    echo "Erreur : Le r√©pertoire source $INPUT_DIR n'existe pas."
    exit 1
fi

# Cr√©er le r√©pertoire de destination s'il n'existe pas
mkdir -p "$OUTPUT_DIR"

# Cr√©er un tableau pour stocker les chemins des fichiers
declare -a IMAGE_FILES

# Utiliser une boucle while pour pr√©server les espaces dans les noms de fichiers
while IFS= read -r -d '' file; do
    IMAGE_FILES+=("$file")
done < <(find "$INPUT_DIR" -type f \( -iname "*.jpg" -o -iname "*.jpeg" -o -iname "*.JPG" -o -iname "*.JPEG" \) -print0)

# V√©rifier si des images ont √©t√© trouv√©es
if [ ${#IMAGE_FILES[@]} -eq 0 ]; then
    echo "Aucune image JPEG trouv√©e dans $INPUT_DIR"
    exit 1
fi

echo "Conversion de ${#IMAGE_FILES[@]} images en format WebP..."

# Initialiser le compteur
count=1

# Traiter chaque image
for image in "${IMAGE_FILES[@]}"; do
    filename="$count.webp"
    output_path="$OUTPUT_DIR/$filename"
    
    echo "üîÑ Conversion de \"$(basename "$image")\" en $filename..."
    
    # Convertir l'image en WebP avec la qualit√© sp√©cifi√©e
    convert "$image" -quality $QUALITY "$output_path"
    
    # Si la conversion a r√©ussi
    if [ $? -eq 0 ]; then
        echo "‚úÖ Image convertie et enregistr√©e sous $output_path"
        # Incr√©menter le compteur
        ((count++))
    else
        echo "‚ùå √âchec de la conversion de $image"
    fi
done

echo "‚ú® Termin√© ! $((count-1)) images ont √©t√© converties en format WebP et renomm√©es s√©quentiellement."
echo "Les images sont disponibles dans le r√©pertoire $OUTPUT_DIR"

# Afficher les statistiques d'√©conomie d'espace
if [ $((count-1)) -gt 0 ]; then
    echo "üìä Statistiques d'√©conomie d'espace :"
    original_size=$(du -ch "${IMAGE_FILES[@]}" | grep total | cut -f1)
    webp_size=$(du -ch "$OUTPUT_DIR"/* | grep total | cut -f1)
    echo "  Taille originale des JPEG : $original_size"
    echo "  Taille des WebP : $webp_size"
fi
